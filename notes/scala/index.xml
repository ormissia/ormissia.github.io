<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Scala Notes on Ormissia's Blog</title><link>https://ormissia.github.io/notes/scala/</link><description>Recent content in Scala Notes on Ormissia's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://ormissia.github.io/notes/scala/index.xml" rel="self" type="application/rss+xml"/><item><title>Basic Types</title><link>https://ormissia.github.io/notes/scala/basic/basic_type/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ormissia.github.io/notes/scala/basic/basic_type/</guid><description>函数 函数参数为val类型，且可以给出默认值
def test(a: Int, b: Int = 1, c: Int = 2): Unit = { println(s&amp;quot;$a $b $c&amp;quot;) } test(1, 2) //1 2 2 test(1, c = 4) //1 1 4 匿名函数 函数是带有参数的表达式。
(x: Int) =&amp;gt; x + 1 方法 方法的表现和行为和函数非常类似，但是它们之间有一些关键的差别。
方法由def关键字定义。def后面跟着一个名字、参数列表、返回类型和方法体。
def addThenMultiply(x: Int, y: Int)(multiplier: Int): Int = (x + y) * multiplier println(addThenMultiply(1, 2)(3)) // 9 字符串拼接 val a = 1 val b = 2 val c = s&amp;quot;$a+$b=${a + b}&amp;quot; 对象 约等于static单例对象</description></item></channel></rss>