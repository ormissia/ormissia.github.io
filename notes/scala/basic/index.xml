<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Basic on Ormissia's Blog</title><link>https://ormissia.github.io/notes/scala/basic/</link><description>Recent content in Basic on Ormissia's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://ormissia.github.io/notes/scala/basic/index.xml" rel="self" type="application/rss+xml"/><item><title>Basic Types</title><link>https://ormissia.github.io/notes/scala/basic/basic_type/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ormissia.github.io/notes/scala/basic/basic_type/</guid><description>表达式 表达式是可计算的语句。
println(1) // 1 println(1 + 1) // 2 println(&amp;#34;Hello!&amp;#34;) // Hello! println(&amp;#34;Hello,&amp;#34; + &amp;#34; world!&amp;#34;) // Hello, world! 常量（Values）
你可以使用val关键字来给表达式的结果命名。
val x = 1 + 1 println(x) // 2 函数 函数是带有参数的表达式。
(x: Int) =&amp;gt; x + 1 方法 方法的表现和行为和函数非常类似，但是它们之间有一些关键的差别。
方法由def关键字定义。def后面跟着一个名字、参数列表、返回类型和方法体。
def addThenMultiply(x: Int, y: Int)(multiplier: Int): Int = (x + y) * multiplier println(addThenMultiply(1, 2)(3)) // 9</description></item></channel></rss>